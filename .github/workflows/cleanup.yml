name: Cleanup

on:
  workflow_call:
    secrets:
      GITHUB_TOKEN:
        required: false
  workflow_dispatch:
    inputs:
      min_versions_to_keep:
        description: 'Minimum versions to keep for main package'
        required: false
        default: '10'
        type: string
      min_base_versions_to_keep:
        description: 'Minimum versions to keep for base package'
        required: false
        default: '5'
        type: string
      delete_only_untagged:
        description: 'Delete only untagged versions'
        required: false
        default: true
        type: boolean
      force_cleanup:
        description: 'Force aggressive cleanup (removes more versions)'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  packages: write

jobs:
  cleanup:
    runs-on: ubuntu-latest
    name: Cleanup temporary artifacts and old packages

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set cleanup parameters
        id: params
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "min_versions=${{ inputs.min_versions_to_keep }}" >> $GITHUB_OUTPUT
            echo "min_base_versions=${{ inputs.min_base_versions_to_keep }}" >> $GITHUB_OUTPUT
            echo "delete_untagged_only=${{ inputs.delete_only_untagged }}" >> $GITHUB_OUTPUT
            if [ "${{ inputs.force_cleanup }}" = "true" ]; then
              echo "min_versions=3" >> $GITHUB_OUTPUT
              echo "min_base_versions=2" >> $GITHUB_OUTPUT
            fi
          else
            echo "min_versions=10" >> $GITHUB_OUTPUT
            echo "min_base_versions=5" >> $GITHUB_OUTPUT
            echo "delete_untagged_only=true" >> $GITHUB_OUTPUT
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete old package versions
        uses: actions/delete-package-versions@v5
        with:
          package-name: 'latex-compiler'
          package-type: 'container'
          min-versions-to-keep: ${{ steps.params.outputs.min_versions }}
          delete-only-untagged-versions: ${{ steps.params.outputs.delete_untagged_only }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete old package versions (base image)
        uses: actions/delete-package-versions@v5
        with:
          package-name: 'latex-compiler-base'
          package-type: 'container'
          min-versions-to-keep: ${{ steps.params.outputs.min_base_versions }}
          delete-only-untagged-versions: ${{ steps.params.outputs.delete_untagged_only }}
          token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Clean up Docker system
        run: |
          docker system prune -af --volumes
        continue-on-error: true

      - name: Report cleanup completion
        run: |
          echo "âœ… Cleanup completed successfully"
          echo "- Removed old package versions (kept ${{ steps.params.outputs.min_versions }} main, ${{ steps.params.outputs.min_base_versions }} base)"
          echo "- Delete untagged only: ${{ steps.params.outputs.delete_untagged_only }}"
          echo "- Cleaned up Docker system resources"
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "- Triggered manually with custom parameters"
          else
            echo "- Triggered automatically from main workflow"
          fi
