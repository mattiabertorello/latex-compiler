name: Publish Release

on:
  workflow_call:
    inputs:
      matrix:
        required: true
        type: string
      build_date:
        required: true
        type: string
      should_release:
        required: true
        type: string
      base_image_tag:
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BASE_IMAGE_NAME: ${{ github.repository }}/base
  KEEP_LAST_N: 10

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: inputs.should_release == 'true'
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all manifests
        uses: actions/download-artifact@v4
        with:
          pattern: package-manifest-*
          path: manifests/

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          pattern: test-results-*
          path: test-results/

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get TeX Live version
        id: texlive-version
        run: |
          # Get version from the base image
          docker pull ${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:${{ inputs.base_image_tag }}
          TEXLIVE_VERSION=$(docker run --rm ${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:${{ inputs.base_image_tag }} bash -c 'export $(grep -v "^#" /etc/environment | xargs -d "\n") && echo $LIVE_YEAR')
          echo "version=${TEXLIVE_VERSION}" >> $GITHUB_OUTPUT

      - name: Create release notes
        run: |
          cat > release-notes.md << EOF
          # LaTeX Compiler Docker Images - TeX Live ${{ steps.texlive-version.outputs.version }}

          **Build Date:** ${{ inputs.build_date }}
          **TeX Live Version:** ${{ steps.texlive-version.outputs.version }}

          ## Available Variants

          ### Minimal Variant
          - **Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest\`
          - **Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.texlive-version.outputs.version }}\`
          - **Description:** Essential LaTeX packages for basic document compilation
          - **Use case:** Simple documents, faster builds, smaller image size

          ### Standard Variant
          - **Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-standard\`
          - **Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.texlive-version.outputs.version }}-standard\`
          - **Description:** Balanced selection of LaTeX packages for most common documents
          - **Use case:** Academic papers, reports, presentations with moderate complexity

          ### Full Variant  
          - **Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-full\`
          - **Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.texlive-version.outputs.version }}-full\`
          - **Description:** Comprehensive LaTeX package set for complex documents
          - **Use case:** Scientific papers, complex formatting, extensive package requirements

          ## Usage Examples

          \`\`\`bash
          # Minimal variant
          docker run --rm -v \$(pwd):/data ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest compile.sh

          # Standard variant
          docker run --rm -v \$(pwd):/data ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-standard compile.sh

          # Full variant
          docker run --rm -v \$(pwd):/data ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-full compile.sh
          \`\`\`
          
          ## What's Included
          
          - TeX Live ${{ steps.texlive-version.outputs.version }}
          - Built-in compilation helper script with error handling
          - Multi-architecture support (linux/amd64, linux/arm64)
          - Automatic two-pass compilation for references
          - Colored output and cleanup options
          
          ## Testing
          
          All variants have been tested with comprehensive test suites:
          - **Basic tests:** Core LaTeX functionality
          - **Package-specific tests:** Variant-specific package testing
          - **Compilation verification:** PDF generation confirmed
          
          ## Package Manifests
          
          Detailed package lists for each variant are attached to this release.
          
          ## Changes in this Release
          
          - Updated to TeX Live ${{ steps.texlive-version.outputs.version }}
          - Refreshed all package repositories
          - Updated base system packages
          - Optimized build process with multi-stage Docker builds
          - Verified compilation functionality with automated test suites
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: texlive-${{ steps.texlive-version.outputs.version }}-${{ inputs.build_date }}
          name: TeX Live ${{ steps.texlive-version.outputs.version }} - ${{ inputs.build_date }}
          body_path: release-notes.md
          files: |
            manifests/**/*.md
            test-results/**/*.pdf
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release summary
        run: |
          echo "## ðŸš€ Release Created" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** texlive-${{ steps.texlive-version.outputs.version }}-${{ inputs.build_date }}" >> $GITHUB_STEP_SUMMARY
          echo "**TeX Live Version:** ${{ steps.texlive-version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Build Date:** ${{ inputs.build_date }}" >> $GITHUB_STEP_SUMMARY
          echo "**Variants:** minimal, standard, full" >> $GITHUB_STEP_SUMMARY
          echo "**Test Results:** All variants tested successfully" >> $GITHUB_STEP_SUMMARY
